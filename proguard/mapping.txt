android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    void run() -> run
    void popFromBackStack$1385ff() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState$79e5e33f() -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged$1385ff() -> e
    void onActivityResult$6eb84b52() -> f
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> g
    void onInflate$423a76cd() -> h
    void onAttach$63a22f9() -> i
    android.view.animation.Animation onCreateAnimation$24236ca7() -> j
    void onViewCreated$65f1d89() -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void initState() -> l
    void onDetach() -> m
    void onDestroyOptionsMenu() -> n
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performCreate(android.os.Bundle) -> a
    android.view.View performCreateView$469ccb8a() -> o
    void performActivityCreated$79e5e33f() -> p
    void performStart() -> q
    void performResume() -> r
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> s
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> b
    void performPause() -> t
    void performStop() -> u
    void performReallyStop() -> v
    void performDestroyView() -> w
    void performDestroy() -> x
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$2cd5ab55(java.lang.String) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> d
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> t
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.r:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.s:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.u:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.v:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.w:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.x:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.y:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.z:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.e:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.i:
    int getCount() -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject$171eb1dd() -> c
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.j:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.k:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.l:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.n:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.o:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.p:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.q:
    long getFrameTime() -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.s:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.t:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    int mPageMargin -> m
    android.graphics.drawable.Drawable mMarginDrawable -> n
    int mTopPageBounds -> o
    int mBottomPageBounds -> p
    float mFirstOffset -> q
    float mLastOffset -> r
    int mChildWidthMeasureSpec -> s
    int mChildHeightMeasureSpec -> t
    boolean mInLayout -> u
    boolean mScrollingCacheEnabled -> v
    boolean mPopulatePending -> w
    int mOffscreenPageLimit -> x
    boolean mIsBeingDragged -> y
    boolean mIsUnableToDrag -> z
    int mDefaultGutterSize -> A
    int mGutterSize -> B
    int mTouchSlop -> C
    float mInitialMotionX -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    int mActivePointerId -> G
    android.view.VelocityTracker mVelocityTracker -> H
    int mMinimumVelocity -> I
    int mMaximumVelocity -> J
    int mFlingDistance -> K
    int mCloseEnough -> L
    int mSeenPositionMin -> M
    int mSeenPositionMax -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> Z
    int mDrawingOrder -> aa
    java.util.ArrayList mDrawingOrderedChildren -> ab
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ac
    java.lang.Runnable mEndScrollRunnable -> ad
    int mScrollState -> ae
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setCurrentItem$2563266(int) -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem$3af7e890(int) -> c
    void populate() -> b
    void populate(int) -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> c
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> f
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> d
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> e
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> g
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> f
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> a
android.support.v4.view.ViewPager$1 -> android.support.v4.view.v:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.w:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.x:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.y:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.z:
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aa:
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ab:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ac:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.baidu.location.BDLocation -> com.baidu.location.a:
    int if -> c
    java.lang.String d -> d
    double else -> e
    double for -> f
    boolean c -> g
    double f -> h
    boolean int -> i
    float new -> j
    boolean try -> k
    float long -> l
    boolean b -> m
    int do -> n
    float char -> o
    java.lang.String goto -> p
    java.lang.String byte -> q
    boolean void -> r
    boolean case -> s
    java.lang.String a -> t
    java.lang.String mServerString -> a
    boolean e -> u
    com.baidu.location.BDLocation$a mAddr -> b
    double getLatitude() -> a
    double getLongitude() -> b
    float getRadius() -> c
    void setRadius(float) -> a
    int getLocType() -> d
com.baidu.location.BDLocation$a -> com.baidu.location.b:
    java.lang.String if -> a
    java.lang.String new -> b
    java.lang.String int -> c
    java.lang.String byte -> d
    java.lang.String do -> e
    java.lang.String for -> f
    java.lang.String try -> g
    com.baidu.location.BDLocation a -> h
com.baidu.location.BDLocationListener -> com.baidu.location.c:
com.baidu.location.BDNotifyListener -> com.baidu.location.d:
    double mLatitude -> a
    double mLongitude -> b
    float mRadius -> c
    float differDistance -> d
    java.lang.String mCoorType -> e
    double mLatitudeC -> f
    double mLongitudeC -> g
    int Notified -> h
    boolean isAdded -> i
    com.baidu.location.i mNotifyCache -> j
com.baidu.location.Jni -> com.baidu.location.Jni:
    int case -> a
    int try -> b
    int byte -> c
    int for -> d
    int int -> e
    int if -> f
    int a -> g
    int do -> h
    boolean new -> i
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String if(java.lang.String) -> a
    double[] if(double,double,java.lang.String) -> a
com.baidu.location.LocationClient -> com.baidu.location.e:
    long r -> a
    long char -> b
    java.lang.String A -> c
    com.baidu.location.LocationClientOption l -> d
    boolean q -> e
    android.content.Context j -> f
    android.os.Messenger k -> g
    com.baidu.location.LocationClient$a do -> h
    android.os.Messenger i -> i
    java.util.ArrayList C -> j
    com.baidu.location.BDLocation x -> k
    boolean d -> l
    boolean v -> m
    boolean g -> n
    com.baidu.location.LocationClient$b byte -> o
    boolean a -> p
    boolean int -> q
    java.lang.Object new -> r
    com.baidu.location.i else -> s
    com.baidu.location.BDLocationListener c -> t
    java.lang.String z -> u
    java.lang.String u -> v
    java.lang.Boolean long -> w
    java.lang.Boolean case -> x
    android.content.ServiceConnection t -> y
    void requestNotifyLocation() -> a
    void a(int) -> a
    android.os.Messenger char(com.baidu.location.LocationClient) -> a
    android.os.Messenger int(com.baidu.location.LocationClient) -> b
    com.baidu.location.LocationClientOption byte(com.baidu.location.LocationClient) -> c
    com.baidu.location.LocationClient$a try(com.baidu.location.LocationClient) -> d
    java.lang.Object do(com.baidu.location.LocationClient) -> e
    boolean for$5833bfc(com.baidu.location.LocationClient) -> f
    java.util.ArrayList else(com.baidu.location.LocationClient) -> g
    void do(com.baidu.location.LocationClient,android.os.Message) -> a
    void if(com.baidu.location.LocationClient,android.os.Message) -> b
    void a(com.baidu.location.LocationClient,android.os.Message) -> c
    void try(com.baidu.location.LocationClient,android.os.Message) -> d
    void new(com.baidu.location.LocationClient,android.os.Message) -> e
    void for(com.baidu.location.LocationClient,android.os.Message) -> f
    void if(com.baidu.location.LocationClient) -> h
    void new(com.baidu.location.LocationClient) -> i
    void case(com.baidu.location.LocationClient) -> j
    void a(com.baidu.location.LocationClient) -> k
    void for(com.baidu.location.LocationClient) -> l
    void goto(com.baidu.location.LocationClient) -> m
    boolean if(com.baidu.location.LocationClient,boolean) -> a
    void a(com.baidu.location.LocationClient,android.os.Message,int) -> a
    void int(com.baidu.location.LocationClient,android.os.Message) -> g
com.baidu.location.LocationClient$a -> com.baidu.location.g:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.h:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.j:
    java.lang.String try -> a
    java.lang.String char -> b
    boolean case -> c
    int int -> d
    int long -> e
    java.lang.String new -> f
    int goto -> g
    boolean void -> h
    boolean for -> i
    boolean else -> j
    boolean if -> k
    float do -> l
    int a -> m
    java.lang.String byte -> n
    boolean equals(com.baidu.location.LocationClientOption) -> a
    boolean isDisableCache() -> a
com.baidu.location.a -> com.baidu.location.k:
    java.lang.String if -> a
    java.util.ArrayList do -> b
    android.os.Handler int -> c
    boolean for -> d
    boolean a -> e
    boolean for() -> a
    void int(android.os.Message) -> a
    void if(android.os.Message) -> b
    boolean for(android.os.Message) -> c
    java.lang.String a(android.os.Message) -> d
    void a(java.lang.String,int) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> b
    void a(java.lang.String,android.os.Message) -> a
    java.lang.String byte() -> b
    int do(android.os.Message) -> e
    com.baidu.location.a$a a(android.os.Messenger) -> a
    void do() -> e
    void new() -> c
    java.lang.String try() -> d
com.baidu.location.a$a -> com.baidu.location.l:
    java.lang.String int -> a
    android.os.Messenger for -> b
    com.baidu.location.LocationClientOption do -> c
    int if -> d
    com.baidu.location.a a -> e
    void if(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String) -> b
    void if() -> a
    void a(int) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(com.baidu.location.a$a,int) -> a
com.baidu.location.b -> com.baidu.location.m:
    long q -> a
    android.content.Context f -> b
    android.location.LocationManager do -> c
    android.location.Location F -> d
    com.baidu.location.b$b x -> e
    android.location.GpsStatus a -> f
    com.baidu.location.b$a new -> g
    int k -> h
    long d -> i
    long long -> j
    boolean int -> k
    android.os.Handler H -> l
    boolean t -> m
    java.lang.String D -> n
    boolean C -> o
    long E -> p
    int K -> q
    boolean w -> r
    boolean e -> s
    java.util.List u -> t
    java.lang.String g -> u
    java.lang.String try -> v
    java.lang.String n -> w
    java.lang.String r -> x
    com.baidu.location.b$d for -> y
    java.lang.String N -> z
    java.io.File A -> A
    java.lang.StringBuffer y -> B
    boolean char -> C
    int case -> D
    int c -> E
    long byte -> F
    long J -> G
    long L -> H
    double o -> I
    double m -> J
    int j -> K
    int I -> L
    int b -> M
    void k() -> a
    void l() -> b
    java.lang.String for(android.location.Location) -> c
    java.lang.String int() -> c
    android.location.Location try() -> d
    boolean new() -> e
    boolean a(android.location.Location,android.location.Location,boolean) -> a
    void a(boolean) -> a
    java.lang.String do(android.location.Location) -> a
    java.lang.String if(android.location.Location) -> b
    boolean if(int,int,int) -> b
    boolean h() -> z
    void f() -> A
    java.lang.String j() -> f
    void a(com.baidu.location.b,android.location.Location) -> a
    boolean a(com.baidu.location.b,boolean) -> a
    boolean try(com.baidu.location.b) -> a
    void if(com.baidu.location.b,boolean) -> b
    long if(com.baidu.location.b,long) -> a
    android.location.LocationManager new(com.baidu.location.b) -> b
    android.location.GpsStatus do(com.baidu.location.b) -> c
    android.location.GpsStatus a(com.baidu.location.b,android.location.GpsStatus) -> a
    int void() -> g
    long do(com.baidu.location.b,long) -> b
    int a(int) -> a
    long a(com.baidu.location.b) -> d
    boolean int(com.baidu.location.b) -> e
    java.util.List case(com.baidu.location.b) -> f
    java.lang.String if(com.baidu.location.b) -> g
    java.lang.String for(com.baidu.location.b) -> h
    java.lang.String byte(com.baidu.location.b) -> i
    java.lang.String a(java.lang.String) -> a
    java.lang.String if(com.baidu.location.b,java.lang.String) -> a
    java.lang.String do(com.baidu.location.b,java.lang.String) -> b
    java.lang.String a(com.baidu.location.b,java.lang.String) -> c
    boolean do(com.baidu.location.b,boolean) -> c
    long a(com.baidu.location.b,long) -> c
    boolean else() -> h
    int if$134621() -> i
    java.lang.StringBuffer a(java.lang.StringBuffer) -> a
    java.lang.StringBuffer c() -> j
    int do(int) -> b
    long a(long) -> a
    double if(double) -> a
    double a(double) -> b
    long if(long) -> b
    long do(long) -> c
    boolean if$138603() -> k
    double d() -> l
    double a() -> m
    long g() -> n
    int i() -> o
    int for(int) -> c
    int new(int) -> d
    long o() -> p
    int int(int) -> e
    long b() -> q
    int if() -> r
    int e() -> s
    int do() -> t
    int byte() -> u
    int for() -> v
    java.io.File m() -> w
    void n() -> x
    boolean long() -> y
    boolean a(int,int,int) -> a
com.baidu.location.b$a -> com.baidu.location.n:
    com.baidu.location.b a -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.baidu.location.b$b -> com.baidu.location.o:
    com.baidu.location.b a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.b$c -> com.baidu.location.p:
    boolean goto -> c
    java.lang.String char -> d
    boolean h -> e
    java.lang.String int -> f
    int long -> g
    int d -> h
    java.lang.String f -> i
    boolean new -> j
    java.lang.String b -> k
    char case -> l
    java.lang.String g -> m
    boolean void -> n
    int if -> o
    double byte -> p
    double for -> q
    java.util.List do -> r
    boolean try -> s
    java.util.List else -> t
    int e -> u
    int a -> a
    com.baidu.location.b c -> b
    void try() -> a
    boolean a(java.lang.String) -> a
    double[] a(java.util.List) -> a
    double[] if(double,double) -> a
    boolean if(com.baidu.location.b$c) -> a
    int do(com.baidu.location.b$c) -> b
    double for(com.baidu.location.b$c) -> c
    double a(com.baidu.location.b$c) -> d
com.baidu.location.b$c$a -> com.baidu.location.q:
    int int -> b
    int a -> c
    int if -> d
    int do -> e
    com.baidu.location.b$c for -> a
    int a() -> a
    int if() -> b
    int do() -> c
com.baidu.location.b$d -> com.baidu.location.r:
    java.lang.String if -> a
    boolean a -> b
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a$24ec0bda() -> a
    boolean a(com.baidu.location.b$d,android.location.Location) -> a
com.baidu.location.c -> com.baidu.location.s:
    java.lang.String else -> a
    android.content.Context if -> b
    android.telephony.TelephonyManager try -> c
    com.baidu.location.c$a a -> d
    java.util.List new -> e
    java.lang.String byte -> f
    java.lang.String goto -> g
    android.os.Handler do -> h
    com.baidu.location.c$b int -> i
    boolean b -> j
    java.lang.reflect.Method long -> k
    java.lang.reflect.Method case -> l
    java.lang.reflect.Method for -> m
    java.lang.Class d -> n
    long void -> o
    int c -> p
    boolean char -> q
    void do() -> a
    void byte() -> b
    int new() -> c
    boolean if() -> f
    com.baidu.location.c$a a() -> d
    void a(android.telephony.CellLocation) -> a
    java.lang.String a(boolean) -> a
    long try() -> e
    com.baidu.location.c$a for(com.baidu.location.c) -> a
    java.util.List do(com.baidu.location.c) -> b
    android.telephony.TelephonyManager if(com.baidu.location.c) -> c
    void a(com.baidu.location.c,android.telephony.CellLocation) -> a
    android.os.Handler a(com.baidu.location.c) -> d
com.baidu.location.c$a -> com.baidu.location.t:
    int for -> a
    int try -> b
    int do -> c
    int if -> d
    long byte -> e
    int int -> f
    char new -> g
    com.baidu.location.c a -> h
    boolean a(com.baidu.location.c$a) -> a
    boolean do() -> a
    boolean for() -> b
    java.lang.String a() -> c
    java.lang.String toString() -> toString
    java.lang.String int() -> d
com.baidu.location.c$b -> com.baidu.location.u:
    com.baidu.location.c a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.e -> com.baidu.location.v:
    java.lang.String try -> a
    long f -> b
    long new -> c
    long a -> d
    android.content.Context goto -> e
    android.os.Handler if -> f
    android.net.wifi.WifiManager void -> g
    com.baidu.location.e$b char -> h
    com.baidu.location.e$a c -> i
    com.baidu.location.e$c case -> j
    long b -> k
    long long -> l
    boolean int -> m
    java.lang.Object g -> n
    java.lang.reflect.Method e -> o
    boolean for -> p
    boolean d -> q
    boolean else -> r
    boolean do -> s
    void try() -> a
    void case() -> b
    void else() -> c
    boolean a() -> d
    boolean new() -> e
    java.lang.String char() -> f
    com.baidu.location.e$c int() -> g
    com.baidu.location.e$c byte() -> h
    void for() -> i
    boolean do(com.baidu.location.e) -> a
    android.os.Handler if(com.baidu.location.e) -> b
    boolean a(com.baidu.location.e,boolean) -> a
    void a(com.baidu.location.e) -> c
    void for(com.baidu.location.e) -> d
    java.lang.String do() -> j
com.baidu.location.e$a -> com.baidu.location.w:
    com.baidu.location.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e$b -> com.baidu.location.x:
    com.baidu.location.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e$c -> com.baidu.location.y:
    java.util.List for -> a
    long if -> c
    long int -> d
    boolean do -> e
    com.baidu.location.e a -> b
    java.lang.String int() -> j
    int try() -> a
    java.lang.String char() -> b
    java.lang.String byte() -> c
    java.lang.String a(int) -> b
    java.lang.String else() -> d
    void a() -> k
    java.lang.String if(int) -> a
    int do() -> e
    boolean case() -> f
    boolean for() -> g
    boolean new() -> h
    boolean if() -> i
com.baidu.location.e$d -> com.baidu.location.z:
    com.baidu.location.e a -> a
    void run() -> run
com.baidu.location.f -> com.baidu.location.f:
    java.lang.String ac -> a
    java.lang.String m -> d
    java.lang.String a -> e
    java.io.File j -> f
    java.io.File k -> g
    android.os.Handler R -> b
    android.os.Messenger an -> c
    com.baidu.location.c r -> h
    com.baidu.location.b ab -> i
    com.baidu.location.e F -> j
    com.baidu.location.a au -> k
    com.baidu.location.e$c C -> l
    com.baidu.location.e$c char -> m
    com.baidu.location.e$c ae -> n
    com.baidu.location.c$a try -> o
    com.baidu.location.c$a al -> p
    com.baidu.location.c$a u -> q
    android.location.Location f -> r
    java.lang.String h -> s
    java.lang.String new -> t
    java.lang.String H -> u
    boolean ad -> v
    boolean Y -> w
    boolean O -> x
    boolean aj -> y
    long P -> z
    long d -> A
    boolean N -> B
    com.baidu.location.f$c y -> C
    android.database.sqlite.SQLiteDatabase T -> D
    java.lang.String if -> E
    java.lang.String A -> F
    java.lang.String as -> G
    boolean Q -> H
    boolean goto -> I
    java.lang.String X -> J
    int Z -> K
    boolean J -> L
    double o -> M
    double n -> N
    double q -> O
    long E -> P
    boolean am -> Q
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(boolean) -> a
    void byte() -> h
    void case() -> i
    void long() -> a
    java.lang.String new() -> b
    boolean else() -> c
    boolean int(com.baidu.location.f) -> a
    boolean a$385ae0fe(com.baidu.location.f) -> b
    void else(com.baidu.location.f) -> c
    boolean if(com.baidu.location.f) -> d
    void do(com.baidu.location.f,android.os.Message) -> a
    void a(com.baidu.location.f,android.os.Message) -> b
    void new(com.baidu.location.f,android.os.Message) -> c
    void a(com.baidu.location.f,android.os.Message,int) -> a
    void for$1a97996a() -> d
    void char(com.baidu.location.f) -> e
    void int(com.baidu.location.f,android.os.Message) -> d
    void c(com.baidu.location.f) -> f
    void for(com.baidu.location.f,android.os.Message) -> e
    void if(com.baidu.location.f,android.os.Message) -> f
    void try(com.baidu.location.f,android.os.Message) -> g
    void case(com.baidu.location.f) -> g
    void a$1a97996a() -> e
    void try(com.baidu.location.f) -> h
    void b(com.baidu.location.f) -> i
    void a(com.baidu.location.f,int) -> a
    com.baidu.location.f$c do(com.baidu.location.f) -> j
    void void(com.baidu.location.f) -> k
    java.io.File a(java.io.File) -> a
    com.baidu.location.e goto(com.baidu.location.f) -> l
    com.baidu.location.c long(com.baidu.location.f) -> m
    java.io.File for() -> f
    java.lang.String byte(com.baidu.location.f) -> n
    java.io.File a() -> g
    com.baidu.location.a new(com.baidu.location.f) -> o
com.baidu.location.f$a -> com.baidu.location.aa:
    android.content.Context if -> b
    com.baidu.location.f a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.io.File,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.location.f$b -> com.baidu.location.ab:
    com.baidu.location.f a -> a
    void run() -> run
com.baidu.location.f$c -> com.baidu.location.f$c:
    long new -> b
    int char -> c
    android.app.AlarmManager try -> d
    com.baidu.location.f$c$a case -> e
    android.app.PendingIntent d -> f
    android.content.Context goto -> g
    long void -> h
    long[] a -> i
    int int -> j
    com.baidu.location.c$a b -> k
    java.lang.String long -> l
    int byte -> m
    boolean do -> n
    boolean if -> o
    boolean else -> p
    java.lang.String c -> q
    com.baidu.location.f e -> a
    void try() -> a
    void do() -> b
    void for() -> c
    void a() -> d
    void if() -> e
    void case() -> f
    java.lang.String a(com.baidu.location.f$c,java.lang.String) -> a
com.baidu.location.f$c$a -> com.baidu.location.f$c$a:
    com.baidu.location.f$c a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.f$d -> com.baidu.location.ac:
    com.baidu.location.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.g -> com.baidu.location.ad:
    java.lang.String new -> a
    int d -> b
    int void -> c
    java.lang.String l -> d
    java.lang.String e -> e
    java.lang.String do -> f
    java.lang.String for -> g
    java.lang.String long -> h
    boolean j -> i
    boolean else -> j
    boolean b -> k
    boolean char -> l
    boolean h -> m
    java.util.ArrayList f -> n
    int a -> o
    android.net.Uri if -> p
    int try -> q
    java.lang.String k -> r
    int g -> s
    int goto -> t
    android.os.Handler int -> u
    android.os.Handler m -> v
    android.os.Handler c -> w
    boolean a(java.lang.String,android.os.Handler) -> a
    boolean if(java.lang.String,android.os.Handler) -> b
    void f() -> a
    void a(java.lang.String,boolean) -> a
    boolean a(android.content.Context) -> a
    int do(android.content.Context) -> b
    int if(android.content.Context) -> c
    boolean if(java.lang.String) -> a
    void c() -> b
    void for() -> c
    void for(android.os.Handler) -> a
    int new() -> d
    java.lang.String else() -> e
    java.lang.String goto() -> f
    int b() -> g
    java.lang.String long() -> h
    int e() -> i
    java.lang.String void() -> j
    int g() -> k
    android.os.Handler try() -> l
    java.lang.String do$16915f7f() -> m
    android.os.Handler if$7ca32c81() -> n
    boolean a$138603() -> o
    java.lang.String if() -> p
    java.lang.String a() -> q
    android.os.Handler int() -> r
    android.os.Handler a$7ca32c81() -> s
    boolean if$138603() -> t
    java.util.ArrayList d() -> u
    int char() -> v
    java.util.ArrayList a$66d0ef51() -> w
    boolean do$138603() -> x
    boolean byte() -> y
    java.lang.String do() -> z
    android.os.Handler case() -> A
    android.os.Handler do$7ca32c81() -> B
    java.lang.String a$16915f7f() -> C
    boolean for$138603() -> D
com.baidu.location.g$1 -> com.baidu.location.ae:
    void run() -> run
com.baidu.location.g$2 -> com.baidu.location.af:
    void run() -> run
com.baidu.location.g$3 -> com.baidu.location.ag:
    void run() -> run
com.baidu.location.g$4 -> com.baidu.location.ah:
    void run() -> run
com.baidu.location.i -> com.baidu.location.i:
    java.lang.String do -> a
    java.util.ArrayList byte -> b
    float goto -> c
    com.baidu.location.BDLocation case -> d
    long b -> e
    com.baidu.location.LocationClient d -> f
    android.content.Context if -> g
    int a -> h
    long char -> i
    boolean void -> j
    boolean long -> k
    android.app.PendingIntent try -> l
    android.app.AlarmManager for -> m
    com.baidu.location.i$b else -> n
    boolean c -> o
    void if() -> a
    int if(com.baidu.location.BDNotifyListener) -> a
    int do(com.baidu.location.BDNotifyListener) -> b
    boolean do() -> b
    java.lang.String a(com.baidu.location.i) -> a
    java.util.ArrayList do(com.baidu.location.i) -> b
    com.baidu.location.LocationClient if(com.baidu.location.i) -> c
com.baidu.location.i$b -> com.baidu.location.i$b:
    com.baidu.location.i a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.j -> com.baidu.location.ai:
    boolean H -> a
    boolean ab -> b
    boolean d -> c
    int h -> d
    java.lang.String f -> ap
    java.lang.String char -> aq
    java.lang.String N -> e
    boolean E -> ar
    boolean k -> as
    java.lang.String else -> at
    java.lang.Process aj -> au
    java.lang.String do -> f
    java.lang.String A -> g
    java.lang.String ah -> h
    boolean R -> i
    boolean G -> j
    int l -> k
    double J -> l
    double Z -> m
    double if -> n
    double o -> o
    int I -> p
    byte[] j -> q
    boolean ag -> r
    int g -> s
    float am -> t
    float c -> u
    float F -> v
    float U -> w
    int p -> x
    int K -> y
    int X -> z
    int int -> A
    int for -> B
    int ad -> C
    int long -> D
    float D -> E
    float C -> F
    float ai -> G
    float Q -> H
    int Y -> I
    float byte -> J
    int S -> K
    float a -> L
    float u -> M
    float s -> N
    int r -> O
    int q -> P
    boolean void -> Q
    boolean try -> R
    int V -> S
    int aa -> T
    int L -> U
    long M -> V
    long ac -> W
    long al -> X
    int af -> Y
    boolean O -> Z
    boolean P -> aa
    boolean n -> ab
    boolean x -> ac
    boolean z -> ad
    boolean m -> ae
    float w -> af
    float W -> ag
    int v -> ah
    int ae -> ai
    int goto -> aj
    java.lang.String i -> av
    java.lang.String ak -> ak
    java.lang.String b -> al
    int new -> am
    int t -> an
    int e -> ao
    int if(java.lang.String,java.lang.String,java.lang.String) -> a
    float a(java.lang.String,java.lang.String,java.lang.String) -> b
    double do(java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,double) -> a
    java.lang.String for() -> a
    java.lang.String a(com.baidu.location.c$a,com.baidu.location.e$c,android.location.Location,java.lang.String,int) -> a
    void a(int) -> a
    void if() -> b
    void if(int) -> b
    void try() -> c
    void new() -> d
    void if$16da05f7() -> e
    void a(java.lang.String,java.lang.String) -> a
    boolean do(java.lang.String) -> a
    java.lang.String do() -> f
    java.lang.String a$5a238448(byte[]) -> a
com.baidu.location.j$a -> com.baidu.location.aj:
    java.lang.String if -> a
    java.lang.String if(android.content.Context) -> a
com.baidu.location.j$b -> com.baidu.location.ak:
    java.lang.String do(android.content.Context) -> a
com.baidu.location.k -> com.baidu.location.al:
    java.lang.String do -> a
    java.util.ArrayList h -> b
    java.util.ArrayList long -> c
    java.util.ArrayList m -> d
    java.util.ArrayList x -> e
    java.util.ArrayList j -> f
    java.util.ArrayList r -> g
    java.lang.String y -> h
    java.lang.String u -> i
    java.lang.String t -> j
    java.lang.String k -> k
    java.lang.String p -> l
    java.io.File else -> m
    int case -> n
    int w -> o
    int byte -> p
    int i -> q
    int b -> r
    int try -> s
    int o -> t
    int l -> u
    double new -> v
    double n -> w
    double void -> x
    double int -> y
    int c -> z
    int char -> A
    int v -> B
    android.location.Location e -> C
    android.location.Location q -> D
    android.location.Location a -> E
    com.baidu.location.e$c g -> F
    java.lang.String do() -> a
    void a(com.baidu.location.c$a,com.baidu.location.e$c,android.location.Location,java.lang.String) -> a
    void a(double,double,double,double) -> a
    boolean a(android.location.Location,boolean) -> a
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,com.baidu.location.e$c) -> a
    int a(java.util.List,int) -> a
    void if(java.lang.String) -> a
    void a(int,boolean) -> a
    boolean a(java.lang.String,java.util.List) -> a
    void a() -> b
    java.lang.String if() -> c
net.bestidear.bestidearlauncher.ChoiceActivity -> net.bestidear.bestidearlauncher.ChoiceActivity:
    android.widget.GridView mGridView -> a
    net.bestidear.bestidearlauncher.ChoiceActivity$GridAdapter mGridAdapter -> b
    android.widget.TextView mActionText -> c
    android.widget.Button btnAllselect -> d
    android.widget.Button btnUNselect -> e
    android.widget.Button btnOk -> f
    boolean[] b -> g
    void onCreate(android.os.Bundle) -> onCreate
    int checkedCount() -> a
    void onClick(android.view.View) -> onClick
    java.lang.String formatString(int) -> a
    boolean[] access$0(net.bestidear.bestidearlauncher.ChoiceActivity) -> a
    android.widget.TextView access$1(net.bestidear.bestidearlauncher.ChoiceActivity) -> b
    int access$2(net.bestidear.bestidearlauncher.ChoiceActivity) -> c
    java.lang.String access$3(net.bestidear.bestidearlauncher.ChoiceActivity,int) -> a
    net.bestidear.bestidearlauncher.ChoiceActivity$GridAdapter access$4(net.bestidear.bestidearlauncher.ChoiceActivity) -> d
net.bestidear.bestidearlauncher.ChoiceActivity$1 -> net.bestidear.bestidearlauncher.a:
    net.bestidear.bestidearlauncher.ChoiceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
net.bestidear.bestidearlauncher.ChoiceActivity$GridAdapter -> net.bestidear.bestidearlauncher.b:
    android.content.Context mContext -> b
    net.bestidear.bestidearlauncher.ChoiceActivity this$0 -> a
    int getCount() -> getCount
    net.bestidear.bestidearlauncher.model.ApplicationInfo getItem(int) -> b
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void chiceState(int) -> a
    java.lang.Object getItem(int) -> getItem
net.bestidear.bestidearlauncher.Clock -> net.bestidear.bestidearlauncher.Clock:
    java.util.Calendar mCalendar -> a
    net.bestidear.bestidearlauncher.Clock$FormatChangeObserver mFormatChangeObserver -> c
    java.lang.Runnable mTicker -> d
    android.os.Handler mHandler -> e
    boolean mTickerStopped -> f
    java.lang.String mFormat -> b
    java.lang.String[] weekdays -> g
    void initClock(android.content.Context) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setFormat() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void access$0(net.bestidear.bestidearlauncher.Clock) -> a
    boolean access$1(net.bestidear.bestidearlauncher.Clock) -> b
    android.os.Handler access$2(net.bestidear.bestidearlauncher.Clock) -> c
    java.lang.Runnable access$3(net.bestidear.bestidearlauncher.Clock) -> d
net.bestidear.bestidearlauncher.Clock$1 -> net.bestidear.bestidearlauncher.c:
    net.bestidear.bestidearlauncher.Clock this$0 -> a
    void run() -> run
net.bestidear.bestidearlauncher.Clock$FormatChangeObserver -> net.bestidear.bestidearlauncher.d:
    net.bestidear.bestidearlauncher.Clock this$0 -> a
    void onChange(boolean) -> onChange
net.bestidear.bestidearlauncher.Launcher -> net.bestidear.bestidearlauncher.Launcher:
    java.lang.String Tag -> o
    boolean isUseDefault -> a
    java.util.List listCellinfo -> b
    int installCount -> c
    net.bestidear.bestidearlauncher.workplace.WorkplaceConfig workplaceConfig -> p
    android.widget.LinearLayout base -> q
    net.bestidear.bestidearlauncher.model.workplaceLayout workplace -> r
    android.widget.HorizontalScrollView hSV -> s
    net.bestidear.bestidearlauncher.model.addLayout addblocklayout -> t
    int WifiIconLevel -> d
    int signalLevel -> e
    boolean _3G_STATUS -> u
    android.widget.ImageView wifi_image -> v
    android.widget.ImageView bluetooth_image -> w
    android.widget.ImageView _3G_image -> x
    android.widget.ImageView net_image -> y
    android.widget.ImageView sdcard_image -> z
    android.widget.ImageView usb_image -> A
    net.bestidear.weather.WeatherHandler weatherHandler -> B
    android.widget.ImageView weather_icon -> C
    android.widget.TextView City_weather_text -> D
    android.widget.TextView weather_temp -> E
    android.view.View weather_layout -> F
    android.bluetooth.BluetoothAdapter adapter -> G
    android.content.Context context -> H
    android.app.ProgressDialog myDialog -> f
    int FocusX -> g
    int FocusY -> h
    android.telephony.TelephonyManager tel -> i
    boolean isFirstRun -> j
    boolean goLive -> k
    android.content.BroadcastReceiver HomeKeyEventBroadCastReceiver -> l
    int WifiMessage_Open_MSG -> I
    int WifiMessage_Close_MSG -> J
    int WifiMessage_Change_MSG -> K
    int Bluetooth_Open -> L
    int Bluetooth_Close -> M
    int _3G_Open -> N
    int _3G_Close -> O
    int Net_Open -> P
    int Net_Close -> Q
    int Sdcard_open -> R
    int Sdcard_close -> S
    int usb_open -> T
    int usb_close -> U
    int makeCelllayout -> V
    android.os.Handler myHandler -> W
    java.util.List Usb_list -> X
    android.content.BroadcastReceiver wifibluetoothReceiver -> m
    boolean mKeydownRepeatFlag -> Y
    int repeatCount -> Z
    java.lang.String Player_PKG_NAME -> aa
    android.content.BroadcastReceiver packageReceiver -> n
    void onCreate(android.os.Bundle) -> onCreate
    void LoadConfig() -> d
    void makeCelllayout() -> e
    boolean checkApkExist(java.lang.String,int) -> a
    void DisplayWeather(boolean) -> a
    void registerIntentReceivers() -> f
    void updateWeather() -> a
    void UpdateLauncherSearch_bar_ICO(int) -> a
    int getStrength(android.content.Context) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    java.lang.String access$0() -> b
    void access$1$5c43769e() -> c
    void access$2(net.bestidear.bestidearlauncher.Launcher,boolean) -> a
    void access$3(net.bestidear.bestidearlauncher.Launcher) -> a
    void access$4(net.bestidear.bestidearlauncher.Launcher) -> b
    void access$5(net.bestidear.bestidearlauncher.Launcher) -> c
    android.os.Handler access$6(net.bestidear.bestidearlauncher.Launcher) -> d
    void access$7(net.bestidear.bestidearlauncher.Launcher,android.bluetooth.BluetoothAdapter) -> a
    android.bluetooth.BluetoothAdapter access$8(net.bestidear.bestidearlauncher.Launcher) -> e
    int access$9$5931e6cb(int,int) -> a
    int access$10$5931e6cb(int,int) -> b
    boolean access$11(net.bestidear.bestidearlauncher.Launcher) -> f
    void access$12(net.bestidear.bestidearlauncher.Launcher,boolean) -> b
    android.content.Context access$13(net.bestidear.bestidearlauncher.Launcher) -> g
    net.bestidear.bestidearlauncher.workplace.WorkplaceConfig access$14(net.bestidear.bestidearlauncher.Launcher) -> h
net.bestidear.bestidearlauncher.Launcher$1 -> net.bestidear.bestidearlauncher.e:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.bestidear.bestidearlauncher.Launcher$2 -> net.bestidear.bestidearlauncher.f:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
net.bestidear.bestidearlauncher.Launcher$3 -> net.bestidear.bestidearlauncher.g:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.bestidear.bestidearlauncher.Launcher$4 -> net.bestidear.bestidearlauncher.h:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.bestidear.bestidearlauncher.Launcher$5 -> net.bestidear.bestidearlauncher.i:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void onClick(android.view.View) -> onClick
net.bestidear.bestidearlauncher.Launcher$6 -> net.bestidear.bestidearlauncher.j:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void run() -> run
net.bestidear.bestidearlauncher.Launcher$7 -> net.bestidear.bestidearlauncher.k:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void run() -> run
net.bestidear.bestidearlauncher.Launcher$PhoneStateMonitor -> net.bestidear.bestidearlauncher.l:
    net.bestidear.bestidearlauncher.Launcher this$0 -> a
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
net.bestidear.bestidearlauncher.LauncherApplication -> net.bestidear.bestidearlauncher.LauncherApplication:
    java.lang.String Tag -> e
    java.util.ArrayList mApplications -> a
    java.lang.String[] topApp -> f
    java.lang.String[] delApp -> b
    android.content.BroadcastReceiver packageReceiver -> c
    android.content.BroadcastReceiver LocaleReceiver -> d
    void onCreate() -> onCreate
    void appTotop() -> b
    void appRemove() -> c
    void loadApplications(boolean) -> a
    void access$0$318bb22a(net.bestidear.bestidearlauncher.LauncherApplication) -> a
    java.lang.String access$1() -> a
net.bestidear.bestidearlauncher.LauncherApplication$1 -> net.bestidear.bestidearlauncher.m:
    net.bestidear.bestidearlauncher.LauncherApplication this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.bestidear.bestidearlauncher.LauncherApplication$2 -> net.bestidear.bestidearlauncher.n:
    net.bestidear.bestidearlauncher.LauncherApplication this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.bestidear.bestidearlauncher.MyActivity -> net.bestidear.bestidearlauncher.MyActivity:
    android.os.Handler WeatherHandler -> a
    void updateWeather() -> a
net.bestidear.bestidearlauncher.MyActivity$1 -> net.bestidear.bestidearlauncher.o:
    net.bestidear.bestidearlauncher.MyActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
net.bestidear.bestidearlauncher.allAppActivity -> net.bestidear.bestidearlauncher.allAppActivity:
    android.widget.HorizontalScrollView Hsv -> a
    net.bestidear.bestidearlauncher.model.workplaceLayout workplace -> b
    boolean isRunning -> c
    android.os.Handler myHandler -> d
    void onCreate(android.os.Bundle) -> onCreate
    void bindApplications() -> c
    android.os.Handler getHandler() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onRestart() -> onRestart
    void access$0() -> b
net.bestidear.bestidearlauncher.allAppActivity$1 -> net.bestidear.bestidearlauncher.p:
    void handleMessage(android.os.Message) -> handleMessage
net.bestidear.bestidearlauncher.model.AllappcellLayout -> net.bestidear.bestidearlauncher.model.AllappcellLayout:
    java.lang.String Tag -> c
    android.content.Context context -> d
    android.widget.FrameLayout framlayout -> e
    android.widget.ImageView icon -> f
    android.widget.TextView title -> g
    android.widget.ImageView cellimage -> h
    boolean isFocus -> i
    int[][] app_normal -> j
    java.lang.String[] usePicApps -> a
    int[] appPic -> b
    int isUsePic(java.lang.String) -> a
    void FillInfo$736b119a(int,int,boolean,int,net.bestidear.bestidearlauncher.model.workplaceLayout,net.bestidear.bestidearlauncher.model.ApplicationInfo) -> a
    android.content.Context access$0(net.bestidear.bestidearlauncher.model.AllappcellLayout) -> a
net.bestidear.bestidearlauncher.model.AllappcellLayout$1 -> net.bestidear.bestidearlauncher.model.a:
    net.bestidear.bestidearlauncher.model.AllappcellLayout this$0 -> a
    android.content.Intent val$intent -> b
    void onClick(android.view.View) -> onClick
net.bestidear.bestidearlauncher.model.AllappcellLayout$2 -> net.bestidear.bestidearlauncher.model.b:
    net.bestidear.bestidearlauncher.model.AllappcellLayout this$0 -> a
    net.bestidear.bestidearlauncher.model.workplaceLayout val$wplo -> b
    int val$index -> c
    void onFocusChange(android.view.View,boolean) -> onFocusChange
net.bestidear.bestidearlauncher.model.ApplicationInfo -> net.bestidear.bestidearlauncher.model.c:
    java.lang.String title -> a
    android.content.Intent intent -> b
    android.graphics.drawable.Drawable icon -> c
    java.lang.String packagename -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
net.bestidear.bestidearlauncher.model.GridItem -> net.bestidear.bestidearlauncher.model.GridItem:
    android.content.Context mContext -> a
    boolean mChecked -> b
    android.widget.ImageView mImgView -> c
    android.widget.ImageView mSecletView -> d
    android.widget.TextView appname -> e
    void setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    void toggle() -> toggle
    void setImgResId(android.graphics.drawable.Drawable) -> a
    void setAppname(java.lang.String) -> a
net.bestidear.bestidearlauncher.model.addLayout -> net.bestidear.bestidearlauncher.model.addLayout:
    java.lang.String Tag -> c
    android.content.Context context -> d
    android.os.Handler mHandler -> e
    int worklayouttoLeft -> f
    java.util.List appnames -> a
    java.util.List appstate -> b
    java.util.List delApp -> g
    void makeAddLayout() -> a
    void setHandler(android.os.Handler) -> a
    void focus() -> b
    void remove() -> c
    void getDelapk() -> d
    void appRemove() -> e
    void access$0(net.bestidear.bestidearlauncher.model.addLayout) -> a
    void access$1(net.bestidear.bestidearlauncher.model.addLayout) -> b
    void access$2(net.bestidear.bestidearlauncher.model.addLayout) -> c
    android.os.Handler access$3(net.bestidear.bestidearlauncher.model.addLayout) -> d
net.bestidear.bestidearlauncher.model.addLayout$1 -> net.bestidear.bestidearlauncher.model.d:
    net.bestidear.bestidearlauncher.model.addLayout this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
net.bestidear.bestidearlauncher.model.addLayout$2 -> net.bestidear.bestidearlauncher.model.e:
    net.bestidear.bestidearlauncher.model.addLayout this$0 -> a
    void onClick(android.view.View) -> onClick
net.bestidear.bestidearlauncher.model.addLayout$3 -> net.bestidear.bestidearlauncher.model.f:
    net.bestidear.bestidearlauncher.model.addLayout this$0 -> a
    void run() -> run
net.bestidear.bestidearlauncher.model.cellInfo -> net.bestidear.bestidearlauncher.model.g:
    java.lang.String cellName -> a
    java.lang.String packageName -> b
    java.lang.String className -> c
    int type -> d
    java.lang.String background -> e
    int OrderX -> f
    int OrderY -> g
    int spanX -> h
    int spanY -> i
    boolean isInstall -> j
    int Left -> k
    int Top -> l
    android.graphics.drawable.Drawable appicon -> m
    java.lang.String getPackageName() -> a
    void setPackageName(java.lang.String) -> a
    int getSpanY() -> b
    void setSpanY(int) -> a
    int getSpanX() -> c
    void setSpanX(int) -> b
    int getOrderX() -> d
    void setOrderX(int) -> c
    java.lang.String getClassName() -> e
    void setClassName(java.lang.String) -> b
    java.lang.String getBackground() -> f
    void setBackground(java.lang.String) -> c
    int getType() -> g
    void setType(int) -> d
    java.lang.String getCellName() -> h
    void setCellName(java.lang.String) -> d
    boolean isInstall() -> i
    void setInstall(boolean) -> a
    int getLeft() -> j
    void setLeft(int) -> e
    int getOrderY() -> k
    void setOrderY(int) -> f
    int getTop() -> l
    void setTop(int) -> g
    android.graphics.drawable.Drawable getAppicon() -> m
    void setAppicon(android.graphics.drawable.Drawable) -> a
net.bestidear.bestidearlauncher.model.cellLayout -> net.bestidear.bestidearlauncher.model.cellLayout:
    java.lang.String Tag -> a
    android.content.Context context -> b
    android.widget.FrameLayout framlayout -> c
    android.widget.ImageView icon -> d
    android.widget.TextView title -> e
    android.widget.ImageView cellimage -> f
    boolean isFocus -> g
    int[][] app_normal -> h
    void FillInfo$682ef69f(boolean,net.bestidear.bestidearlauncher.model.workplaceLayout,net.bestidear.bestidearlauncher.model.cellInfo) -> a
    android.content.Context access$0(net.bestidear.bestidearlauncher.model.cellLayout) -> a
net.bestidear.bestidearlauncher.model.cellLayout$1 -> net.bestidear.bestidearlauncher.model.h:
    net.bestidear.bestidearlauncher.model.cellLayout this$0 -> a
    net.bestidear.bestidearlauncher.model.cellInfo val$cellinfo -> b
    void onClick(android.view.View) -> onClick
net.bestidear.bestidearlauncher.model.cellLayout$2 -> net.bestidear.bestidearlauncher.model.i:
    net.bestidear.bestidearlauncher.model.cellLayout this$0 -> a
    net.bestidear.bestidearlauncher.model.cellInfo val$cellinfo -> b
    net.bestidear.bestidearlauncher.model.workplaceLayout val$wplo -> c
    void onFocusChange(android.view.View,boolean) -> onFocusChange
net.bestidear.bestidearlauncher.model.workplaceLayout -> net.bestidear.bestidearlauncher.model.workplaceLayout:
    java.lang.String Tag -> e
    android.content.Context context -> f
    net.bestidear.bestidearlauncher.model.cellInfo cellinfo -> g
    int cellWidth -> h
    int cellHeight -> i
    int cellSpace -> j
    int cell_OFFSIZE -> k
    int worklayouttoLeft -> l
    int worklayouttoTop -> m
    java.util.ArrayList Applications -> n
    net.bestidear.bestidearlauncher.model.ApplicationInfo applicationInfo -> o
    int Col1Left -> p
    int Col2Left -> q
    int Col1OrderX -> r
    int Col2OrderX -> s
    int Row1Top -> t
    int Row2Top -> u
    int AddTop -> v
    int BlockCount -> w
    android.widget.HorizontalScrollView hsw -> x
    boolean isMake -> y
    int FOCUS -> a
    int NotFOCUS -> b
    int AllappFOCUS -> c
    int AllappNotFOCUS -> d
    android.os.Handler myHandler -> z
    void makeAllAppCelllayout(java.util.ArrayList) -> a
    void makeCelllayout() -> a
    void makeCustomLayout() -> b
    int searchCellIndex(int,int) -> a
    android.os.Handler getHandler() -> getHandler
    void setHSW(android.widget.HorizontalScrollView) -> a
    void access$0(net.bestidear.bestidearlauncher.model.workplaceLayout,int,int) -> a
    void access$1(net.bestidear.bestidearlauncher.model.workplaceLayout) -> a
    void access$2(net.bestidear.bestidearlauncher.model.workplaceLayout,int) -> a
    void access$3(net.bestidear.bestidearlauncher.model.workplaceLayout) -> b
net.bestidear.bestidearlauncher.model.workplaceLayout$1 -> net.bestidear.bestidearlauncher.model.j:
    net.bestidear.bestidearlauncher.model.workplaceLayout this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
net.bestidear.bestidearlauncher.utils.ImageUtil -> net.bestidear.bestidearlauncher.a.a:
    android.graphics.drawable.Drawable drawLayoutDropShadow(android.graphics.drawable.Drawable) -> a
net.bestidear.bestidearlauncher.utils.StringUtil -> net.bestidear.bestidearlauncher.a.b:
    int toInteger(java.lang.String) -> a
    boolean isToday(java.lang.String) -> b
net.bestidear.bestidearlauncher.utils.Utils -> net.bestidear.bestidearlauncher.a.c:
    java.lang.String getStringFromInputStream(java.io.InputStream) -> a
    java.util.List doJsonParser(java.lang.String) -> a
net.bestidear.bestidearlauncher.workplace.WorkplaceConfig -> net.bestidear.bestidearlauncher.b.a:
    android.content.Context mContext -> a
    java.util.List getConfig$22f3aa59() -> a
net.bestidear.weather.DBHelper -> net.bestidear.weather.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String[] getAllProvinces() -> a
    java.util.List getCityAndCodeByProvince(java.lang.String) -> a
    java.lang.String getProvinceCodeByCityNum(java.lang.String) -> b
net.bestidear.weather.SetCityActivity -> net.bestidear.weather.SetCityActivity:
    java.lang.String[] cityCodes -> d
    java.lang.String[] groups -> e
    java.lang.String[] childs -> f
    java.lang.String CityName -> g
    android.widget.Spinner spinner_province -> h
    android.widget.Spinner spinner_city -> i
    net.bestidear.weather.WeatherHandler weatherHandler -> j
    net.bestidear.weather.DBHelper dbHelper -> a
    boolean isFirstRun -> b
    boolean Launch -> c
    android.widget.TextView today_date -> k
    android.widget.ImageView today_icon -> l
    android.widget.TextView today_weather -> m
    android.widget.TextView today_temp -> n
    android.widget.TextView tomorrow_date -> o
    android.widget.ImageView tomorrow_icon -> p
    android.widget.TextView tomorrow_weather -> q
    android.widget.TextView tomorrow_temp -> r
    java.lang.String classDir -> s
    void onCreate(android.os.Bundle) -> onCreate
    void updateWeather() -> a
    android.widget.Spinner access$0(net.bestidear.weather.SetCityActivity) -> a
    void access$1(net.bestidear.weather.SetCityActivity,java.lang.String) -> a
    java.lang.String[] access$2(net.bestidear.weather.SetCityActivity) -> b
    java.lang.String[] access$3(net.bestidear.weather.SetCityActivity) -> c
    net.bestidear.weather.WeatherHandler access$4(net.bestidear.weather.SetCityActivity) -> d
net.bestidear.weather.SetCityActivity$1 -> net.bestidear.weather.b:
    net.bestidear.weather.SetCityActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
net.bestidear.weather.SetCityActivity$2 -> net.bestidear.weather.c:
    net.bestidear.weather.SetCityActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
net.bestidear.weather.WeatherHandler -> net.bestidear.weather.d:
    java.lang.String TAG -> c
    java.lang.String classDir -> d
    net.bestidear.bestidearlauncher.MyActivity activity -> e
    android.content.Context context -> f
    boolean isDateChange -> a
    boolean isCityChange -> b
    void handleMessage(android.os.Message) -> handleMessage
net.bestidear.weather.WeatherInfo -> net.bestidear.weather.e:
    java.lang.String city -> a
    java.lang.String date_y -> b
    java.lang.String date -> c
    java.lang.String temp -> d
    java.lang.String SD -> e
    java.lang.String temp1 -> f
    java.lang.String weather1 -> g
    java.lang.String img_single -> h
    java.lang.String wind1 -> i
    java.lang.String index_d -> j
    java.lang.String temp2 -> k
    java.lang.String weather2 -> l
    java.lang.String img3 -> m
    java.lang.String img4 -> n
    java.lang.String temp3 -> o
    java.lang.String weather3 -> p
    java.lang.String img5 -> q
    java.lang.String img6 -> r
    java.lang.String temp4 -> s
    java.lang.String weather4 -> t
    java.lang.String img7 -> u
    java.lang.String img8 -> v
    java.lang.String temp5 -> w
    java.lang.String weather5 -> x
    java.lang.String img9 -> y
    java.lang.String img10 -> z
    long validTime -> A
    java.lang.String getCity() -> a
    void setCity(java.lang.String) -> a
    java.lang.String getDate_y() -> b
    void setDate_y(java.lang.String) -> b
    void setDate(java.lang.String) -> c
    java.lang.String getTemp() -> c
    void setTemp(java.lang.String) -> d
    void setSD(java.lang.String) -> e
    java.lang.String getTemp1() -> d
    void setTemp1(java.lang.String) -> f
    java.lang.String getWeather1() -> e
    void setWeather1(java.lang.String) -> g
    java.lang.String getImg_single() -> f
    void setImg_single(java.lang.String) -> h
    void setWind1(java.lang.String) -> i
    void setIndex_d(java.lang.String) -> j
    java.lang.String getTemp2() -> g
    void setTemp2(java.lang.String) -> k
    java.lang.String getWeather2() -> h
    void setWeather2(java.lang.String) -> l
    java.lang.String getImg3() -> i
    void setImg3(java.lang.String) -> m
    void setImg4(java.lang.String) -> n
    void setTemp3(java.lang.String) -> o
    void setWeather3(java.lang.String) -> p
    void setImg5(java.lang.String) -> q
    void setImg6(java.lang.String) -> r
    void setTemp4(java.lang.String) -> s
    void setWeather4(java.lang.String) -> t
    void setImg7(java.lang.String) -> u
    void setImg8(java.lang.String) -> v
    void setTemp5(java.lang.String) -> w
    void setWeather5(java.lang.String) -> x
    void setImg9(java.lang.String) -> y
    void setImg10(java.lang.String) -> z
    void setValidTime(long) -> a
net.bestidear.weather.WeatherUtil -> net.bestidear.weather.f:
    net.bestidear.weather.WeatherInfo getWeatherFromSP(android.content.SharedPreferences) -> a
    int getWeatherBitMapResource(java.lang.String) -> a
